syntax = "proto3";

option ruby_package = "Tucana::Shared";

package shared;

import "shared.struct.proto";
import "shared.data_type.proto";

message Flow {
  // Database ID -> req. for Aquila to identify in FlowStore
  int64 flow_id = 1;
  int64 project_id = 2;
  string type = 3;
  repeated shared.DataType data_types = 4;
  optional string input_type_identifier = 5;
  optional string return_type_identifier = 6;
  repeated FlowSetting settings = 7;
  NodeFunction starting_node = 8;
}

message FlowSetting {
  int64 database_id = 1;
  string flow_setting_id = 2;
  shared.Struct object = 3;
}

message NodeFunction {
  int64 database_id = 1;
  string runtime_function_id = 2;
  repeated NodeParameter parameters = 3;
  optional NodeFunction next_node = 4 ;
}

message NodeParameter {
  int64 database_id = 1;
  string runtime_parameter_id = 2;
  oneof value {
    shared.Value literal_value = 3;
    ReferenceValue reference_value = 4;
    NodeFunction function_value = 5;
  }
}

message ReferenceValue {
  DataTypeIdentifier type_identifier = 1;
  int32 primary_level = 2;
  int32 secondary_level = 3;
  optional int32 tertiary_level = 4;
  repeated ReferencePath paths = 5;
}

message ReferencePath {
  optional string path = 1;
  optional int64 array_index = 2;
}

message Flows {
  repeated Flow flows = 1;
}
