syntax = "proto3";

option ruby_package = "Tucana::Sagittarius";

package sagittarius;

import "sagittarius.node.proto";
import "sagittarius.flow_definition.proto";

message Flow {
  int64 flow_id = 1;
  Node start_node = 2;
  FlowDefinition definition = 3;
}

message Flows {
  repeated Flow flows = 1;
}

//Aquila sends a request to initialise stream to Sagittarius
message FlowLogonRequest {
}

//Sagittarius sends flow to be updated
message FlowResponse {
  oneof data {
    // Updates a single flow
    Flow updated_flow = 1;
    // Deletes a single flow
    int64 deleted_flow_id = 2;
    // Replaces all flows in Aquila (only on startup and for releases)
    Flows flows = 3;
  }
}

service FlowService {
  rpc Update (FlowLogonRequest) returns (stream FlowResponse) {}
}
