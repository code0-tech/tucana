syntax = "proto3";

option ruby_package = "Tucana::Aquila";

package aquila;

import "shared.runtime_function.proto";

// Request for updating a list of runtime function definitions
message RuntimeFunctionDefinitionUpdateRequest {
  // List of runtime function definitions
  repeated shared.RuntimeFunctionDefinition runtime_functions = 1;
}

// Response of updating runtime function definitions
message RuntimeFunctionDefinitionUpdateResponse {
  // True if was successful, false if not
  bool success = 1;
}

//This service will be implemented as a server by Aquila and as a client by Taurus. 
service RuntimeFunctionDefinitionService {
  rpc Update(RuntimeFunctionDefinitionUpdateRequest) returns (RuntimeFunctionDefinitionUpdateResponse) {}
}
